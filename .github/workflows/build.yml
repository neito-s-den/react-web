name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  front-build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up date-based versioning with increment
        id: version
        run: |
          # Get the current date in YYYY-MM-DD format
          CURRENT_DATE=$(date +"%Y-%m-%d")

          # Get the latest existing tag for the current date
          LATEST_TAG=$(git tag --list "${CURRENT_DATE}-v*" | sort -V | tail -n 1)

          # Extract the current version number (X), if a tag exists
          if [ -n "$LATEST_TAG" ]; then
            CURRENT_VERSION=$(echo "$LATEST_TAG" | sed -E 's/.*-v([0-9]+)/\1/')
            NEW_VERSION=$((CURRENT_VERSION + 1))
          else
            NEW_VERSION=1
          fi

          # Create the new version tag in the format YYYY-MM-DD-vX
          VERSION="${CURRENT_DATE}-v${NEW_VERSION}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          # Build and tag Docker image with the new version
          docker build -f ./front/ops/docker/Dockerfile.prod . --tag ghcr.io/${{ github.repository }}/app:${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository }}/app:${{ env.VERSION }}

          # Optionally, tag it as 'latest' for development environments
          docker tag ghcr.io/${{ github.repository }}/app:${{ env.VERSION }} ghcr.io/${{ github.repository }}/app:latest
          docker push ghcr.io/${{ github.repository }}/app:latest

          docker logout ghcr.io

      - name: Tag the repository with the version
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          # Create a new tag for the current commit
          git tag ${{ env.VERSION }}

          # Push the tag back to the repository
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} ${{ env.VERSION }}
